
syntax = "proto3";
import public "google/protobuf/timestamp.proto";

package rpc;

option objc_class_prefix = "EVE";

message Unit {
}

// Connecter
service Connecter {
  rpc Connect (stream ClientEvent) returns (stream ServiceEvent) {}
}

message ClientEvent {
  oneof content {
    BabyMessage message = 1;
    string typingTo = 2;
  }
}

message ServiceEvent {
  oneof content {
    Message message = 1;
    ContactUpdate contactUpdate = 2;
    Typing typing = 3;
    ConnectSuccess connectSuccess = 4;
  }
}

// Sent by client
message BabyMessage {
  string receiver = 1;
  string content = 2;
}

message Typing {
  string sender = 1;
  string receiver = 2;
}

message ConnectSuccess {

}

// Sent by service
message Message {
  string id = 1;
  string sender = 2;
  string receiver = 3;
  string content = 4;
  google.protobuf.Timestamp createdAt = 5;
  google.protobuf.Timestamp updatedAt = 6;
}

message ContactUpdate {
  Contact contact = 1;
}

// Account(login/register)
service AccountService {
  rpc Register (UserRegisterInfo) returns (Unit) {}
  rpc Login (LoginInfo) returns (LoginResult) {}
}

message LoginInfo {
  string nameOrPhone = 1;
  string password = 2;
}

message LoginResult {
  string token = 1;
  Contact contact = 2;
}

message UserRegisterInfo {
  string phone = 1;
  string name = 2;
  string iconURL = 3;
  string password = 4;
}

message RobotCreateInfo {
  string name = 1;
  string iconURL = 2;
}

// Sync
service Sync {
  rpc SyncContacts (google.protobuf.Timestamp) returns (ContactsSyncResp) {}
  rpc SyncMessages (google.protobuf.Timestamp) returns (MessagesSyncResp) {}
}

message MessagesSyncResp {
  repeated Message messages = 1;
}

message ContactsSyncResp {
  repeated Contact contacts = 1;
}

// Update
service Update {
  rpc UpdateMember (MemberUpdateInfo) returns (Unit) {}
  rpc UpdateRobot (RobotUpdateInfo) returns (Unit) {}
  rpc Create (RobotCreateInfo) returns (Contact) {}
}

message MemberUpdateInfo {
  string name = 1;
  string iconURL = 2;
  string phone = 3;
}

message RobotUpdateInfo {
  string id = 1;
  string name = 2;
  string iconURL = 3;
}

// Upload
service Upload {
  rpc FetchUploadToken (Unit) returns (UploadToken) {}
}

message UploadToken {
  string token = 1;
}

// Contact
message Contact {
  enum Type {
    ROBOT = 0;
    MEMBER = 1;
  }

  string id = 1;
  Type type = 2;
  string name = 3;
  string iconURL = 4;
  string phone = 5;
  bool isOnline = 6;
  string token = 7;
  google.protobuf.Timestamp createdAt = 8;
  google.protobuf.Timestamp updatedAt = 9;
}

